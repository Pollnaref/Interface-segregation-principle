#include <iostream>

using namespace std;

// Інтерфейс для пристроїв, які можуть друкувати
class IPrinter {
public:
    virtual void print(Document& document) = 0;
};

// Інтерфейс для пристроїв, які можуть сканувати
class IScanner {
public:
    virtual void scan(Document& document) = 0;
};

// Клас для пристрою, який може і друкувати, і сканувати
class PrinterScanner : public IPrinter, public IScanner {
public:
    void print(Document& document) override {
        // Реалізація друку документа
    }
    
    void scan(Document& document) override {
        // Реалізація сканування документа
    }
};

// Клас для пристрою, який може тільки друкувати
class Printer : public IPrinter {
public:
    void print(Document& document) override {
        // Реалізація друку документа
    }
};

// Клас для пристрою, який може тільки сканувати
class Scanner : public IScanner {
public:
    void scan(Document& document) override {
        // Реалізація сканування документа
    }
};

// Клас документа, не змінений для прикладу
class Document {};

int main() {
    Document doc;
    Printer printer;
    Scanner scanner;
    PrinterScanner printerScanner;
    
    printer.print(doc);
    scanner.scan(doc);
    printerScanner.print(doc);
    printerScanner.scan(doc);

    return 0;
}
